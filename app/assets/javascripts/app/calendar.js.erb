$(document).ready(function() {

  // page is now ready, initialize the calendar...
  var array_dispo = [];


  $('#js-calendar').fullCalendar({
    defaultView:  'agendaWeek',
    lang:         'fr',
    header:       false,
    timezone:     'local',
    minTime:      '08:00:00',
    maxTime:      '23:00:00',
    columnFormat: 'dddd',
    selectHelper: true,
    selectable:   true,
    editable: true,
    allDaySlot: true,
    eventOverlap: false,
    defaultAllDayEventDuration: { days: 0 },


    select: function(start, end) {
    var mEnd = $.fullCalendar.moment(end);
    var mStart = $.fullCalendar.moment(start);
    if  (mEnd.hours() == mStart.add(24, 'hours').hours()) {
      var start = moment(start).set({'hour': 06, 'minute': 00, 'second':00});
      var end   = moment(start).set({'hour': 21, 'minute': 00, 'second':00});
        var eventData = {
        title: "",
        allDay: false,
        start: start,
        end: end,
        block:  true,
        backgroundColor: "#32B796"
      };
      }
    else {
      var eventData = {
        title: "",
        allDay: false,
        start: start,
        end: end,
        block:  true,
        backgroundColor: "#32B796"
      };
    }
      if (end.isAfter(start, 'day')) {
        $('#js-calendar').fullCalendar('unselect');
      }

      else {
        $('#js-calendar').fullCalendar('renderEvent', eventData, true); // stick? = true
         var array_all_events = [];
         var all_events = $('#js-calendar').fullCalendar('clientEvents');
         $.each(all_events, function(index, value) {
             var day         = moment(value.start["_d"]).format('dddd');
             var start_time  = moment(value.start["_d"]).format("HH:mm");
             var end_time    = moment(value.end["_d"]).format("HH:mm");
             var slot        = {
                day: day,
                start_time: start_time,
                end_time: end_time,
              };
            array_all_events.push(slot);
            $("#dispo_array").val(JSON.stringify(array_all_events));
        });
        $('#js-calendar').fullCalendar('unselect');
      }
    },

    eventClick: function(event, element) {
      if(confirm('Supprimer cette disponibilit√© ?')) {

        $('#js-calendar').fullCalendar('removeEvents', event._id);
        var array_all_events = [];
        var all_events = $('#js-calendar').fullCalendar('clientEvents');
        $.each(all_events, function(index, value) {
           var day         = moment(value.start["_d"]).format('dddd');
           var start_time  = moment(value.start["_d"]).format("HH:mm");
           var end_time    = moment(value.end["_d"]).format("HH:mm");
           var slot        = {
                day: day,
                start_time: start_time,
                end_time: end_time,
              };
            array_all_events.push(slot);
        });
       if (array_all_events.length == 0) {
          $("#dispo_array").val("");
        }
        else {
          $("#dispo_array").val(JSON.stringify(array_all_events));
        }
      }
    },

    eventResize: function(event) {
      var all_events = $('#js-calendar').fullCalendar('clientEvents');
      var array_all_events = [];
      $.each(all_events, function(index, value) {
           var day         = moment(value.start["_d"]).format('dddd');
           var start_time  = moment(value.start["_d"]).format("HH:mm");
           var end_time    = moment(value.end["_d"]).format("HH:mm");
           var slot        = {
                day: day,
                start_time: start_time,
                end_time: end_time,
              };
            array_all_events.push(slot);
        });

      console.log(array_all_events);
       if (array_all_events.length == 0) {
          $("#dispo_array").val("");
        }
        else {
          $("#dispo_array").val(JSON.stringify(array_all_events));
        }
    },


    eventDrop: function( event ) {
      var all_events = $('#js-calendar').fullCalendar('clientEvents');
      console.log(all_events)
      var array_all_events = [];
      $.each(all_events, function(index, value) {
           var day         = moment(value.start["_d"]).format('dddd');
           var start_time  = moment(value.start["_d"]).format("HH:mm");
           var end_time    = moment(value.end["_d"]).format("HH:mm");
           var slot        = {
                day: day,
                start_time: start_time,
                end_time: end_time,
              };
            array_all_events.push(slot);
        });
       if (array_all_events.length == 0) {
          $("#dispo_array").val("eventdrag");
        }
        else {
          $("#dispo_array").val(JSON.stringify(array_all_events));
        }

    },

    selectOverlap: function(event) {
      return ! event.block;
    }
  });
});


